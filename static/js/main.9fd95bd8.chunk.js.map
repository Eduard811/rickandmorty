{"version":3,"sources":["types/characters.ts","redux/reducers/characters.ts","redux/reducers/index.ts","redux/index.ts","api/index.ts","api/character.ts","redux/action-creators/characters.ts","redux/action-creators/index.ts","hook/useAction.ts","hook/useTypedSelector.ts","components/Character/Character.tsx","components/Character/CharacterSkeleton.tsx","components/SortMenu/SortMenu.tsx","components/CryRick/CryRick.tsx","components/Characters/Characters.tsx","App.tsx","index.tsx"],"names":["CharactersActionTypes","initialState","characters","isFetching","error","page","sortBy","rootReducer","combineReducers","state","action","type","FETCH_CHARACTERS","FETCH_CHARACTERS_SUCCESS","payload","map","character","isFavorite","FETCH_CHARACTERS_ERROR","DELETE_CHARACTER","filter","id","ADD_OR_DELETE_FAVORITE","SORT_CHARACTERS","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","$host","axios","create","baseURL","process","getCharacters","a","get","params","data","getCharactersAC","dispatch","results","deleteCharacterAC","AddOrDeleteFavoriteAC","sortCharactersAC","Characters","useActions","useDispatch","bindActionCreators","ActionCreators","useTypedSelector","useSelector","Character","name","image","species","gender","status","location","Card","CardHeader","avatar","Avatar","alt","src","title","subheader","CardMedia","component","height","CardContent","Typography","variant","color","CardActions","IconButton","onClick","CharacterSkeleton","Skeleton","width","options","SortMenu","useState","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","open","Boolean","Button","event","currentTarget","Menu","onClose","MenuListProps","role","option","index","MenuItem","selected","handleMenuItemClick","Rick","styled","position","bottom","left","CryRick","rick","useRef","useEffect","current","lottie","loadAnimation","container","animationData","cryrickanimation","renderer","loop","autoplay","ref","Header","display","justifyContent","Container","theme","gridTemplateColumns","marginTop","padding","gridGap","breakpoints","up","Array","fill","_","length","every","App","sx","minWidth","Box","darkTheme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9fd95bd8.chunk.js","sourcesContent":["import { ICharacter } from '../models/character'\n\nexport interface CharactersState {\n  characters: Array<ICharacter> | []\n  isFetching: boolean\n  error: null | string\n  page: number\n  sortBy: string\n}\n\nexport enum CharactersActionTypes {\n  FETCH_CHARACTERS = 'FETCH_CHARACTERS',\n  FETCH_CHARACTERS_SUCCESS = 'FETCH_CHARACTERS_SUCCESS',\n  FETCH_CHARACTERS_ERROR = 'FETCH_CHARACTERS_ERROR',\n  DELETE_CHARACTER = 'DELETE_CHARACTER',\n  ADD_OR_DELETE_FAVORITE = 'ADD_OR_DELETE_FAVORITE',\n  SORT_CHARACTERS = 'SORT_CHARACTERS',\n}\n\ninterface FetchCharacters {\n  type: CharactersActionTypes.FETCH_CHARACTERS\n}\n\ninterface FetchCharactersSuccess {\n  type: CharactersActionTypes.FETCH_CHARACTERS_SUCCESS\n  payload: Array<ICharacter>\n}\n\ninterface FetchCharactersError {\n  type: CharactersActionTypes.FETCH_CHARACTERS_ERROR\n  payload: string\n}\n\ninterface DeleteCharacter {\n  type: CharactersActionTypes.DELETE_CHARACTER\n  id: number\n}\n\ninterface AddOrDeleteFavorite {\n  type: CharactersActionTypes.ADD_OR_DELETE_FAVORITE\n  id: number\n}\n\ninterface SortCharacters {\n  type: CharactersActionTypes.SORT_CHARACTERS\n  payload: string\n}\n\nexport type CharactersAction =\n  | FetchCharacters\n  | FetchCharactersSuccess\n  | FetchCharactersError\n  | DeleteCharacter\n  | AddOrDeleteFavorite\n  | SortCharacters\n","import { CharactersState, CharactersActionTypes, CharactersAction } from '../../types/characters'\n\nconst initialState: CharactersState = {\n  characters: [],\n  isFetching: false,\n  error: null,\n  page: 1,\n  sortBy: 'All',\n}\n\nexport const CharactersReducer = (state = initialState, action: CharactersAction): CharactersState => {\n  switch (action.type) {\n    case CharactersActionTypes.FETCH_CHARACTERS:\n      return {\n        ...state,\n        isFetching: true,\n      }\n    case CharactersActionTypes.FETCH_CHARACTERS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        characters: action.payload.map((character) => {\n          character.isFavorite = false\n          return character\n        }),\n      }\n    case CharactersActionTypes.FETCH_CHARACTERS_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      }\n    case CharactersActionTypes.DELETE_CHARACTER:\n      return {\n        ...state,\n        characters: state.characters.filter((character) => character.id !== action.id),\n      }\n    case CharactersActionTypes.ADD_OR_DELETE_FAVORITE:\n      return {\n        ...state,\n        characters: state.characters.map((character) => {\n          if (character.id === action.id && character.isFavorite) {\n            character.isFavorite = false\n          } else if (character.id === action.id && !character.isFavorite) {\n            character.isFavorite = true\n          }\n\n          return character\n        }),\n      }\n    case CharactersActionTypes.SORT_CHARACTERS:\n      return {\n        ...state,\n        sortBy: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { CharactersReducer } from './characters'\n\nexport const rootReducer = combineReducers({\n  characters: CharactersReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n","import { applyMiddleware, createStore, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from './reducers'\n\nexport const composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n","import axios from 'axios'\n\nconst $host = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n})\n\nexport { $host }\n","import { $host } from './index'\n\nexport const getCharacters = async (page: number) => {\n  const { data } = await $host.get('api/character', { params: { page } })\n  return data\n}\n","import { Dispatch } from 'redux'\nimport { getCharacters } from '../../api/character'\nimport { CharactersAction, CharactersActionTypes } from '../../types/characters'\n\nexport const getCharactersAC = (page: number) => async (dispatch: Dispatch<CharactersAction>) => {\n  try {\n    dispatch({ type: CharactersActionTypes.FETCH_CHARACTERS })\n    const { results } = await getCharacters(page)\n    dispatch({ type: CharactersActionTypes.FETCH_CHARACTERS_SUCCESS, payload: results })\n  } catch (error) {\n    dispatch({\n      type: CharactersActionTypes.FETCH_CHARACTERS_ERROR,\n      payload: 'Произошла ошибка при загрузке Characters.',\n    })\n  }\n}\n\nexport const deleteCharacterAC = (id: number) => (dispatch: Dispatch<CharactersAction>) => {\n  dispatch({ type: CharactersActionTypes.DELETE_CHARACTER, id })\n}\n\nexport const AddOrDeleteFavoriteAC = (id: number) => (dispatch: Dispatch<CharactersAction>) => {\n  dispatch({ type: CharactersActionTypes.ADD_OR_DELETE_FAVORITE, id })\n}\n\nexport const sortCharactersAC = (sortBy: string) => (dispatch: Dispatch<CharactersAction>) => {\n  dispatch({ type: CharactersActionTypes.SORT_CHARACTERS, payload: sortBy })\n}\n","import * as Characters from './characters'\n\nexport default {\n  ...Characters,\n}\n","import { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport ActionCreators from '../redux/action-creators'\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n  return bindActionCreators(ActionCreators, dispatch)\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport { RootState } from '../redux/reducers'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useActions } from '../../hook/useAction'\nimport { ICharacter } from '../../models/character'\n\nimport Card from '@mui/material/Card'\nimport CardHeader from '@mui/material/CardHeader'\nimport CardMedia from '@mui/material/CardMedia'\nimport CardContent from '@mui/material/CardContent'\nimport CardActions from '@mui/material/CardActions'\nimport Avatar from '@mui/material/Avatar'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\n\nimport FavoriteIcon from '@mui/icons-material/Favorite'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nexport default function Character({\n  id,\n  name,\n  image,\n  species,\n  gender,\n  status,\n  location,\n  isFavorite,\n}: ICharacter) {\n  const { deleteCharacterAC, AddOrDeleteFavoriteAC } = useActions()\n\n  return (\n    <Card>\n      <CardHeader avatar={<Avatar alt={name} src={image} />} title={name} subheader={status} />\n      <CardMedia component=\"img\" height=\"250\" image={image} alt=\"\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Gender: {gender}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Species: {species}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Location: {location.name}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <IconButton aria-label=\"add to favorites\" onClick={() => AddOrDeleteFavoriteAC(id)}>\n          <FavoriteIcon color={isFavorite ? 'secondary' : 'inherit'} />\n        </IconButton>\n        <IconButton aria-label=\"delete\" onClick={() => deleteCharacterAC(id)}>\n          <DeleteIcon color=\"primary\" />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n","import Skeleton from '@mui/material/Skeleton'\nimport Card from '@mui/material/Card'\nimport CardHeader from '@mui/material/CardHeader'\nimport CardMedia from '@mui/material/CardMedia'\nimport CardContent from '@mui/material/CardContent'\nimport CardActions from '@mui/material/CardActions'\nimport IconButton from '@mui/material/IconButton'\nimport FavoriteIcon from '@mui/icons-material/Favorite'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nexport default function CharacterSkeleton() {\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Skeleton variant=\"circular\" width={40} height={40} />}\n        title={<Skeleton variant=\"text\" width={80} height={20} />}\n        subheader={<Skeleton variant=\"text\" width={40} height={20} />}\n      />\n      <CardMedia>\n        <Skeleton variant=\"rectangular\" height={250} />\n      </CardMedia>\n      <CardContent>\n        <Skeleton variant=\"text\" width={80} height={20} />\n        <Skeleton variant=\"text\" width={100} height={20} />\n        <Skeleton variant=\"text\" width={200} height={20} />\n      </CardContent>\n      <CardActions>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"delete\">\n          <DeleteIcon color=\"primary\" />\n        </IconButton>\n      </CardActions>\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { useActions } from '../../hook/useAction'\nimport MenuItem from '@mui/material/MenuItem'\nimport Menu from '@mui/material/Menu'\nimport Button from '@mui/material/Button'\n\nconst options = ['All', 'My favorites']\n\nexport default function SortMenu() {\n  const { sortCharactersAC } = useActions()\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const open = Boolean(anchorEl)\n  const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: number) => {\n    setSelectedIndex(index)\n    sortCharactersAC(options[index])\n    setAnchorEl(null)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickListItem}>{options[selectedIndex]}</Button>\n      <Menu\n        id=\"lock-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'lock-button',\n          role: 'listbox',\n        }}\n      >\n        {options.map((option, index) => (\n          <MenuItem\n            key={option}\n            selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  )\n}\n","import { useEffect, useRef } from 'react'\nimport { styled } from '@mui/material/styles'\nimport lottie from 'lottie-web'\nimport cryrickanimation from '../../animations/cryrickanimation.json'\n\nconst Rick = styled('div')({\n  position: 'fixed',\n  bottom: -10,\n  left: 0,\n})\n\nexport default function CryRick() {\n  const rick = useRef(null)\n\n  useEffect(() => {\n    if (!!rick.current) {\n      lottie.loadAnimation({\n        container: rick.current,\n        animationData: cryrickanimation,\n        renderer: 'svg',\n        loop: true,\n        autoplay: true,\n      })\n    }\n  }, [rick])\n\n  return <Rick ref={rick} />\n}\n","import { useEffect } from 'react'\nimport { useActions } from '../../hook/useAction'\nimport { useTypedSelector } from '../../hook/useTypedSelector'\nimport { styled } from '@mui/material/styles'\n\nimport Character from '../Character/Character'\nimport CharacterSkeleton from '../Character/CharacterSkeleton'\nimport SortMenu from '../SortMenu/SortMenu'\nimport CryRick from '../CryRick/CryRick'\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n})\n\nconst Container = styled('div')(({ theme }) => ({\n  display: 'grid',\n  gridTemplateColumns: 'repeat(1, 1fr)',\n  marginTop: '20px',\n  padding: '0 10px 0 10px',\n  gridGap: '10px',\n  [theme.breakpoints.up('sm')]: {\n    padding: 'unset',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gridGap: '20px',\n  },\n  [theme.breakpoints.up('md')]: {\n    gridTemplateColumns: 'repeat(3, 1fr)',\n  },\n}))\n\nexport default function Characters() {\n  const { characters, isFetching, page, sortBy } = useTypedSelector((state) => state.characters)\n  const { getCharactersAC } = useActions()\n\n  useEffect(() => {\n    getCharactersAC(page)\n  }, [])\n\n  return (\n    <>\n      <Header>\n        <SortMenu />\n      </Header>\n      <Container>\n        {isFetching ? (\n          Array(20)\n            .fill(0)\n            .map((_, index) => <CharacterSkeleton key={index} />)\n        ) : characters.length === 0 ||\n          (sortBy === 'My favorites' && characters.every((character) => !character.isFavorite)) ? (\n          <CryRick />\n        ) : (\n          characters.map((character) =>\n            sortBy === 'All' ? (\n              <Character key={character.id} {...character} />\n            ) : (\n              character.isFavorite && <Character key={character.id} {...character} />\n            )\n          )\n        )}\n      </Container>\n    </>\n  )\n}\n","import Characters from './components/Characters/Characters'\n\nimport Container from '@mui/material/Container'\nimport Box from '@mui/material/Box'\n\nexport default function App() {\n  return (\n    <Container sx={{ minWidth: 320, padding: '40px 0 40px 0' }}>\n      <Box>\n        <Characters />\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './redux'\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport CssBaseline from '@mui/material/CssBaseline'\n\nimport App from './App'\n\nexport const darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}